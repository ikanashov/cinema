# Generated by Django 3.1 on 2021-01-23 18:45

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import model_utils.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='FilmGenre',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='название')),
                ('description', models.TextField(blank=True, verbose_name='описание')),
                ('migrated_from', models.CharField(blank=True, max_length=255, verbose_name='мигрировано')),
            ],
            options={
                'verbose_name': 'жанр',
                'verbose_name_plural': 'жанры',
                'db_table': 'django.film_genre',
            },
        ),
        migrations.CreateModel(
            name='FilmPerson',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('full_name', models.CharField(max_length=255, verbose_name='полное имя')),
                ('imdb_nconst', models.CharField(blank=True, max_length=255, null=True, verbose_name='imdb id')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='дата рождения')),
                ('death_date', models.DateField(blank=True, null=True, verbose_name='дата смерти')),
                ('migrated_from', models.CharField(blank=True, max_length=255, verbose_name='мигрировано')),
            ],
            options={
                'verbose_name': 'участник съёмочной группы',
                'verbose_name_plural': 'участники съёмочной группы',
                'db_table': 'django.film_person',
            },
        ),
        migrations.CreateModel(
            name='FilmType',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='название')),
                ('description', models.TextField(blank=True, verbose_name='описание')),
            ],
            options={
                'verbose_name': 'тип',
                'verbose_name_plural': 'типы',
                'db_table': 'django.film_type',
            },
        ),
        migrations.CreateModel(
            name='FilmWork',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('imdb_tconst', models.CharField(max_length=255, unique=True, verbose_name='imbd id')),
                ('title', models.CharField(max_length=255, verbose_name='название')),
                ('description', models.TextField(blank=True, verbose_name='описание')),
                ('creation_date', models.DateField(verbose_name='дата создания')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='дата завершения')),
                ('certificate', models.TextField(blank=True, verbose_name='возрастные ограничения')),
                ('file_path', models.CharField(blank=True, max_length=255, verbose_name='имя файла')),
                ('rating', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='рейтинг')),
                ('season_number', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='сезон')),
                ('episode_number', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='эпизод')),
            ],
            options={
                'verbose_name': 'кинопроизведение',
                'verbose_name_plural': 'кинопроизведения',
                'db_table': 'django.film_work',
            },
        ),
        migrations.CreateModel(
            name='FilmWorkPerson',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('migrated_from', models.CharField(blank=True, max_length=255, verbose_name='мигрировано')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='создано')),
                ('role', models.CharField(choices=[('actor', 'актер'), ('director', 'режисер'), ('writer', 'сценарист')], max_length=20, verbose_name='роль')),
                ('film_work', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cinema.filmwork')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cinema.filmperson')),
            ],
            options={
                'verbose_name': 'участник съёмочной группы',
                'verbose_name_plural': 'съёмочная группа',
                'db_table': 'django.film_work_person',
            },
        ),
        migrations.CreateModel(
            name='FilmWorkGenre',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('migrated_from', models.CharField(blank=True, max_length=255, verbose_name='мигрировано')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='создано')),
                ('film_work', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cinema.filmwork')),
                ('genre', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cinema.filmgenre')),
            ],
            options={
                'verbose_name': 'жанр кинопроизведения',
                'verbose_name_plural': 'жанры кинопроизведения',
                'db_table': 'django.film_work_genre',
            },
        ),
        migrations.AddField(
            model_name='filmwork',
            name='crew',
            field=models.ManyToManyField(through='cinema.FilmWorkPerson', to='cinema.FilmPerson'),
        ),
        migrations.AddField(
            model_name='filmwork',
            name='genres',
            field=models.ManyToManyField(through='cinema.FilmWorkGenre', to='cinema.FilmGenre'),
        ),
        migrations.AddField(
            model_name='filmwork',
            name='imdb_pconst',
            field=models.ForeignKey(blank=True, db_column='imdb_pconst', null=True, on_delete=django.db.models.deletion.SET_NULL, to='cinema.filmwork', to_field='imdb_tconst'),
        ),
        migrations.AddField(
            model_name='filmwork',
            name='type',
            field=models.ForeignKey(db_column='type_id', on_delete=django.db.models.deletion.PROTECT, to='cinema.filmtype'),
        ),
        migrations.AddConstraint(
            model_name='filmworkperson',
            constraint=models.UniqueConstraint(fields=('role', 'person', 'film_work'), name='uniquie_film_work_person_role'),
        ),
        migrations.AddConstraint(
            model_name='filmworkgenre',
            constraint=models.UniqueConstraint(fields=('genre', 'film_work'), name='uniquie_film_genre'),
        ),
    ]
